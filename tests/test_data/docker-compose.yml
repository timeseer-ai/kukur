version: '2.3'

services:
  sql_server:
    build: odbc
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Timeseer!AI
      - TZ=UTC
    ports:
      - "1433:1433"
    volumes:
      - database-data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${SA_PASSWORD}" -Q "SELECT 1" -b -o /dev/null
      interval: 5s
      timeout: 5s
      retries: 18
      start_period: 10s
  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    volumes:
      - influx-data:/var/lib/influxdb
      - ./influxdb/NOAA_data.txt.gz:/NOAA_data.txt.gz
      - ./influxdb/import-data.sh:/docker-entrypoint-initdb.d/import-data.sh
  cratedb:
    image: crate:4.7
    ports:
      - "4200:4200"
      - "5432:5432"
    volumes:
      - crate-data:/data
    command: ["crate", "-Cdiscovery.type=single-node"]
  postgres:
    image: postgres:15
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_PASSWORD=Timeseer!AI
      - PGUSER=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/import-data.sql:/docker-entrypoint-initdb.d/import-data.sql
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 18
      start_period: 5s
  elasticsearch:
    container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    volumes:
      - ./elasticsearch/data.ndjson:/data.ndjson
      - ./elasticsearch/import-data.sh:/docker-entrypoint-initdb.d/import-data.sh
    environment:
      - 'bootstrap.memory_lock=true'
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
      - 'xpack.security.enrollment.enabled=false'
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9200"]
      interval: 5s
      timeout: 5s
      retries: 18
      start_period: 5s

volumes:
    crate-data:
    database-data:
    influx-data:
    postgres-data:
